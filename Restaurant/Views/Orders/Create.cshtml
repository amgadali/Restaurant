@model Restaurant.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.OrderDate, new { @Value = DateTime.Now })
    @Html.HiddenFor(model => model.Client_Id, new { @Value = ViewBag.Client_Id })
    //@Html.HiddenFor(model => model.Status, new { @Value = 0 })


    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                </div>
            </div>*@
         
            @{
    List<Restaurant.Models.MenuItem> menuItems = (List<Restaurant.Models.MenuItem>)ViewBag.MenuItems;
    int i = 0;
    foreach (Restaurant.Models.MenuItem menuItem in menuItems)
    {


        string check = ViewData.ModelState["OrderMenuItems[" + i + "].MenuItem_Id"] == null ? "" : "checked";
         
     <input type="hidden" name="OrderMenuItems.index" autocomplete="off" value="@i" />
    <div class="form-group">
        <div class="col-sm-2">
            <input type="checkbox" name="OrderMenuItems[@i].MenuItem_ID" @check value="@menuItem.ID" id="OrderMenuItems[@menuItem.ID].menuItem_ID" />
            @menuItem.Name - @menuItem.Price EGP
        </div>
        <div class="col-sm-2">
            <img class="img-thumbnail thumbnail " style="max-width:100px;" src="~/content/images/@menuItem.Image" />
        </div>
            <div class="col-sm-2">
                <label> Count</label>
                <input type="number" class="form-control" style="max-width:70px;" name="OrderMenuItems[@i].Count" id="OrderMenuItems[@menuItem.ID].Count" />
            </div>
        </div>
    

        i++;

    }

}
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
   </div>
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
